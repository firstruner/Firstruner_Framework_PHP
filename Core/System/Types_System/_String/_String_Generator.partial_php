<?php

/**
 * Copyright since 2024 Firstruner and Contributors
 * Firstruner is an Registered Trademark & Property of Christophe BOULAS
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Freemium License
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to contact@firstruner.fr so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit, reproduce ou modify this file.
 * Please refer to https://firstruner.fr/ or contact Firstruner for more information.
 *
 * @author    Firstruner and Contributors <contact@firstruner.fr>
 * @copyright Since 2024 Firstruner and Contributors
 * @license   Proprietary
 * @version 2.0.0
 */

namespace System;

use System\Attributes\Partial;
use System\Collections\Dictionary;
use System\Default\_array;

/**
 * Description of StringGenerator
 *
 * @author Christophe
 */
#[Partial()]
class _String
{
    public static function Generate(string $origin, mixed $items)
    {
        $itemsValided = gettype($items) == _array::ClassName ? $items : [ $items ];

        $finalStr = $origin;
        
        for ($i = 0; $i < count($itemsValided); $i++)
        {
            $finalStr = str_replace(
                    "{" . strval($i) . "}",
                    $itemsValided[$i],
                    $finalStr);
        }
        
        return $finalStr;
    }

    public static function GenerateFromTemplate(string &$template, Dictionary $dictionary)
    {
        foreach ($dictionary as $value)
            $template = str_replace(
                $value->GetKey(),
                $value->Value,
                $template);
    }
}
